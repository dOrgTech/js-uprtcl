{
  "contractName": "Uprtcl",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "requests",
      "outputs": [
        {
          "name": "toPerspectiveIdHash",
          "type": "bytes32"
        },
        {
          "name": "fromPerspectiveIdHash",
          "type": "bytes32"
        },
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "status",
          "type": "uint8"
        },
        {
          "name": "authorized",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "perspectives",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "headId",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "context",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "perspectiveIdHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "contextHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "head",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "context",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "perspectiveId",
          "type": "string"
        }
      ],
      "name": "PerspectiveAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "perspectiveIdHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "author",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "previousHeadId",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "newHeadId",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "previousContext",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "newContext",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "previousName",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "newName",
          "type": "string"
        }
      ],
      "name": "PerspectiveDetailsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "perspectiveIdHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "PerspectiveOwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "toPerspectiveIdHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "fromPerspectiveIdHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "nonce",
          "type": "uint32"
        },
        {
          "indexed": true,
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "toPerspectiveId",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "fromPerspectiveId",
          "type": "string"
        }
      ],
      "name": "MergeRequestCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "AddedUpdatesToRequest",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "perspectiveIdHash",
          "type": "bytes32"
        },
        {
          "name": "contextHash",
          "type": "bytes32"
        },
        {
          "name": "headId",
          "type": "string"
        },
        {
          "name": "context",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "perspectiveId",
          "type": "string"
        }
      ],
      "name": "addPerspective",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "perspectiveIdHash",
          "type": "bytes32"
        },
        {
          "name": "headId",
          "type": "string"
        },
        {
          "name": "context",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "name": "updatePerspectiveDetails",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "perspectiveIdHash",
          "type": "bytes32"
        },
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "perspectiveIdHash",
          "type": "bytes32"
        }
      ],
      "name": "getPerspectiveDetails",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "headId",
          "type": "string"
        },
        {
          "name": "context",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "perspectiveIdHash",
              "type": "bytes32"
            },
            {
              "name": "headId",
              "type": "string"
            },
            {
              "name": "executed",
              "type": "uint8"
            }
          ],
          "name": "headUpdates",
          "type": "tuple[]"
        }
      ],
      "name": "updateHeads",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "toPerspectiveIdHash",
          "type": "bytes32"
        },
        {
          "name": "fromPerspectiveIdHash",
          "type": "bytes32"
        },
        {
          "name": "nonce",
          "type": "uint32"
        }
      ],
      "name": "getRequestId",
      "outputs": [
        {
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "toPerspectiveIdHash",
          "type": "bytes32"
        },
        {
          "name": "fromPerspectiveIdHash",
          "type": "bytes32"
        },
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "nonce",
          "type": "uint32"
        },
        {
          "components": [
            {
              "name": "perspectiveIdHash",
              "type": "bytes32"
            },
            {
              "name": "headId",
              "type": "string"
            },
            {
              "name": "executed",
              "type": "uint8"
            }
          ],
          "name": "headUpdates",
          "type": "tuple[]"
        },
        {
          "name": "approvedAddresses",
          "type": "address[]"
        },
        {
          "name": "toPerspectiveId",
          "type": "string"
        },
        {
          "name": "fromPerspectiveId",
          "type": "string"
        }
      ],
      "name": "initRequest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "name": "perspectiveIdHash",
              "type": "bytes32"
            },
            {
              "name": "headId",
              "type": "string"
            },
            {
              "name": "executed",
              "type": "uint8"
            }
          ],
          "name": "headUpdates",
          "type": "tuple[]"
        }
      ],
      "name": "addUpdatesToRequest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "name": "authorized",
          "type": "uint8"
        }
      ],
      "name": "setRequestAuthorized",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "setRequestStatus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "closeRequest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "executeRequest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "name": "indexes",
          "type": "uint256[]"
        }
      ],
      "name": "executeRequestPartially",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "batchId",
          "type": "bytes32"
        }
      ],
      "name": "getRequest",
      "outputs": [
        {
          "components": [
            {
              "name": "toPerspectiveIdHash",
              "type": "bytes32"
            },
            {
              "name": "fromPerspectiveIdHash",
              "type": "bytes32"
            },
            {
              "name": "owner",
              "type": "address"
            },
            {
              "components": [
                {
                  "name": "perspectiveIdHash",
                  "type": "bytes32"
                },
                {
                  "name": "headId",
                  "type": "string"
                },
                {
                  "name": "executed",
                  "type": "uint8"
                }
              ],
              "name": "headUpdates",
              "type": "tuple[]"
            },
            {
              "name": "approvedAddresses",
              "type": "address[]"
            },
            {
              "name": "status",
              "type": "uint8"
            },
            {
              "name": "authorized",
              "type": "uint8"
            }
          ],
          "name": "batch",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "3333": {
      "events": {},
      "links": {},
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "transactionHash": "0x6eb3a761f9576ec4fec191e7ff41c29d634c6dc6c14ec1f3608d3395b1280a91"
    },
    "1573234616991": {
      "events": {},
      "links": {},
      "address": "0x76E16d26d49B7d8C6743E43905EE4D373B1c1b0E",
      "transactionHash": "0x8df869ee972d025535b831ec574660ce4de7eba543a9eb55f026467f0584fe90"
    },
    "1573375694660": {
      "events": {},
      "links": {},
      "address": "0x6b8558F734E121352b32A994fAdc50ab0e56d532",
      "transactionHash": "0xeb5ad5371fa24360664439ccd6e39fc17a0491c641cac721355b8f69d830d818"
    },
    "1573398758506": {
      "events": {},
      "links": {},
      "address": "0x015bF20E568A0abb36F0EAD4AFA0558Fb5345d8e",
      "transactionHash": "0x18338d9b7859b477eb67bddd88d822441d56295088bbcb67df95ee05ec9d62e4"
    },
    "1573413859193": {
      "events": {},
      "links": {},
      "address": "0x635d4AE8987Bf262a6E593F01417C70aD8ACdDf7",
      "transactionHash": "0xb6152f2461c7866a207604525df8e6072f8d5794e9c9eed2b005542eb7c4ddb5"
    },
    "1573465752999": {
      "events": {},
      "links": {},
      "address": "0x3019953868ad32221039EE98F40e1137a27a4922",
      "transactionHash": "0x2949521bd380087937aca7ac2dfb7005c836858fe1748706994233a6aaa2892a"
    },
    "1573551477339": {
      "events": {},
      "links": {},
      "address": "0xde7B4e5432484D79d7f968343904Af5978FDb49e",
      "transactionHash": "0xc0a1515de6cf31e1f3657398589d79825283c8db4629bc9dc4729ff842d39d0e"
    },
    "1573587724926": {
      "events": {},
      "links": {},
      "address": "0x1F89F7850916812f587f76d19035de7B5E45E4E6",
      "transactionHash": "0x9f9df95a6951a858f891544e40dc116bf5a4ca27ac9c9641c4f90b747a851f9d"
    },
    "1574175262109": {
      "events": {},
      "links": {},
      "address": "0x31851804f8ae2fb592ab1c706eC25Df7c1303dEb",
      "transactionHash": "0x4283562e67ff4ad54a621eeb4f572404512b4542f51b7a5ad7a3769238d5d11b"
    },
    "1574187296700": {
      "events": {},
      "links": {},
      "address": "0x38d5E32Bd6033f4D010C46f2C2bF34926810c848",
      "transactionHash": "0xf57321a793205bf8e45a529191df6d7b47b55237901e6056d566764d76573146"
    },
    "1574193958028": {
      "events": {},
      "links": {},
      "address": "0xE805c20576d2CE4CC83B1D22f16111020DCEe092",
      "transactionHash": "0x2da0c538046c92f139ec0eeff835b4bdf5328b8a9b87285a33713db0f1cdccb4"
    },
    "1512051714758": {
      "events": {},
      "links": {},
      "address": "0x0E1598278e34793C83A4B1989d410DD0D7652b92",
      "transactionHash": "0x4a0ca716ed8ff237f40e84601e171c500879342e0e97d6ac7c2d30a651573b0b"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-11-19T20:08:44.144Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "addPerspective(bytes32,bytes32,string,string,string,address,string)": {
        "notice": "Adds a new perspective to the mapping and sets the owner. The head pointer, the context and the name of the perspective are initialized but can be updated independently using updatePerspectiveDetails(). Validation of the perspectiveId to contextHash should be done externally using any content addressable storage solution for the perspectiveId. The perspectiveId is emited to help perspectiveHash reverse mapping "
      },
      "addUpdatesToRequest(bytes32,(bytes32,string,uint8)[])": {
        "notice": "Add one or more headUpdate elements to an existing request "
      },
      "changeOwner(bytes32,address)": {
        "notice": "Changes the owner of a given perspective. Available only to the current owner of that perspective. "
      },
      "closeRequest(bytes32)": {
        "notice": "set the status to disabled (0) and can be called by any authorized address "
      },
      "getPerspectiveDetails(bytes32)": {
        "notice": "Get the perspective owner and details from its ID "
      },
      "getRequest(bytes32)": {
        "notice": "Get the perspective owner and head from its ID "
      },
      "initRequest(bytes32,bytes32,address,uint32,(bytes32,string,uint8)[],address[],string,string)": {
        "notice": "Creates a new request owned and initialize its properties. The id of the request is derived from the message sender to prevent frontrunning attacks. "
      },
      "updateHeads((bytes32,string,uint8)[])": {
        "notice": "One method to execute the head updates directly, without creating the request. Useful if the owner dont want to use the request authorization feature. It also works for updating one single perspective "
      }
    },
    "notice": "Underscore Protocol Ethereum Service used to store the content of _Prtcl perspectives "
  }
}
